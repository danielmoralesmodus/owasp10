# This workflow analyzes GitHub security alerts and maps them to OWASP Top 10 categories.
# It then uploads the mapping as an artifact.

name: OWASP Top 10 Alerts Mapping

# This workflow can be triggered manually from the GitHub Actions UI.
# You can also configure it to run on 'push' to specific branches, 'schedule', etc.
on:
  workflow_dispatch:

jobs:
  analyze_alerts:
    # Specifies the runner environment for this job. Ubuntu is a common choice.
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code.
      # This is necessary for subsequent steps to access any local files,
      # though for 'alerts-to-owasp10' it's primarily to set up the runner.
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v4

      # Step 2: Run the OWASP Top 10 mapping action.
      # This action fetches security alerts from GitHub and categorizes them
      # according to the OWASP Top 10.
      - name: Generate OWASP Top 10 Mapping
        id: owasp_scan
        uses: KittyChiu/alerts-to-owasp10@v0.1.2
        env:
          # Passes the repository owner (user or organization) to the action.
          # This helps the action know whose alerts to fetch.
          ORGANISATION: ${{ github.repository_owner }}
          # Provides a GitHub Token with necessary permissions to access security alerts.
          # This token should be stored as a repository secret named ALERTS_TOKEN.
          # Required permissions for the token typically include 'security_events: read'.
          GITHUB_TOKEN: ${{ secrets.ALERTS_TOKEN }}

      # Step 3: Upload the generated mapping.csv as a workflow artifact.
      # This makes the output file accessible after the workflow run completes,
      # which can be downloaded from the workflow summary page.
      - name: Upload Mapping Artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          # The name under which the artifact will be stored and available for download.
          name: owasp-mapping-report
          # The path to the file generated by the previous step that needs to be uploaded.
          path: mapping.csv
          # Optional: Define how long the artifact should be retained (e.g., 5 days).
          # This helps manage storage. Default is 90 days.
          retention-days: 5
